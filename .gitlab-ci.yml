services:
  - name: bitnami/mongodb:latest
    alias: mongo
  - name: docker:dind
    alias: docker
  - name: emqx/emqx:latest
    alias: events

variables:
  MONGODB_USERNAME: "admin"
  MONGODB_PASSWORD: "admin"
  MONGODB_DATABASE: "test_authorization-server"
  EMQX_ALLOW_ANONYMOUS: "false"
  EMQX_LOADED_PLUGINS: "emqx_management,emqx_auth_mnesia,emqx_recon,emqx_retainer,emqx_dashboard"

stages:
  - tests
  - pack
  - docs

test_authorization_server:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-gettext-base:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - apps/authorization-server/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - apps/authorization-server/**/*
  variables:
    NODE_ENV: "development"
    SESSION_SECRET: "secret"
    COOKIE_MAX_AGE: "43200"
    TOKEN_VALIDITY: "3600"
    SESSION_NAME: "E2E_SESSION"
    DB_HOST: "mongo"
    DB_USER: "admin"
    DB_PASSWORD: "admin"
    DB_NAME: "authorization-server"
    EVENTS_PROTO: "mqtt"
    EVENTS_HOST: "events"
    EVENTS_PORT: "1883"
    EVENTS_USER: "user"
    EVENTS_PASSWORD: "changeit"
  before_script:
    - cd apps/authorization-server
    - npm install
    - curl -i --basic -u admin:public -X POST http://events:8081/api/v4/mqtt_user -d '{"login":"user","password":"changeit","is_superuser":false}'
  script:
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test:server
    # Create .env file
    - envsubst '${NODE_ENV}
      ${SESSION_SECRET}
      ${COOKIE_MAX_AGE}
      ${SESSION_NAME}
      ${TOKEN_VALIDITY}
      ${DB_HOST}
      ${DB_NAME}
      ${DB_USER}
      ${DB_PASSWORD}' < docker/env.tmpl > .env
    - envsubst '${EVENTS_PROTO}
      ${EVENTS_HOST}
      ${EVENTS_PORT}
      ${EVENTS_USER}
      ${EVENTS_PASSWORD}' < docker/env-events.tmpl >> .env
    # set env variable for test
    - export NODE_ENV=test
    # Test backend e2e
    - npm run test:e2e
  tags:
    - docker

test_authorization_client:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-headless-chrome:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - frontends/authorization-client/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - frontends/authorization-client/**/*
  before_script:
    - cd frontends/authorization-client
    - npm install
  script:
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # set env variable for test
    - export NODE_ENV=test
    # Test frontend
    - export DISPLAY=:99
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - npm run test
    - npm run e2e
  tags:
    - docker

test_communication_server:
  image: node:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - apps/communication-server/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - apps/communication-server/**/*
  before_script:
    - cd apps/communication-server
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test:server
    # Test backend e2e
    - npm run test:e2e
  tags:
    - docker

test_identity_provider:
  image: node:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - apps/identity-provider/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - apps/identity-provider/**/*
  before_script:
    - cd apps/identity-provider
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test:server
    # Test backend e2e
    - npm run test:e2e
  tags:
    - docker

test_identity_client:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-headless-chrome:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - frontends/identity-client/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - frontends/identity-client/**/*
  before_script:
    - cd frontends/identity-client
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test frontend
    - export DISPLAY=:99
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - npm run test
    - npm run e2e
  tags:
    - docker

test_infrastructure_console:
  image: node:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - apps/infrastructure-console/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - apps/infrastructure-console/**/*
  before_script:
    - cd apps/infrastructure-console
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test backend unit tests
    - npm run test:server
    # Test backend e2e
    - npm run test:e2e
  tags:
    - docker

test_admin_client:
  image: registry.gitlab.com/castlecraft/docker-craft/node-latest-headless-chrome:latest
  stage: tests
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - frontends/admin-client/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - frontends/admin-client/**/*
  before_script:
    - cd frontends/admin-client
    - npm install
  script:
    # set env variable for test
    - export NODE_ENV=test
    # Check Code Quality
    - npm run lint
    - npm run format:check
    # Test frontend
    - export DISPLAY=:99
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - npm run test
    - npm run e2e
  tags:
    - docker

pack_staging_authorization_server:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Authorization Server
    - docker build -t authorization-server apps/authorization-server
    - docker tag authorization-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:edge

pack_staging_authorization_client:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Authorization Client
    - docker build -t authorization-client frontends/authorization-client
    - docker tag authorization-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:edge

pack_staging_communication_server:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Communication Server
    - docker build -t communication-server apps/communication-server
    - docker tag communication-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:edge

pack_staging_identity_provider:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Identity Provider
    - docker build -t identity-provider apps/identity-provider
    - docker tag identity-provider $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:edge

pack_staging_identity_client:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Identity Client
    - docker build --build-arg BUILD_ARGS="-- --prod=false" -t identity-client frontends/identity-client
    - docker tag identity-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:edge

pack_staging_infrastructure_console:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Infrastructure Console
    - docker build -t infrastructure-console apps/infrastructure-console
    - docker tag infrastructure-console $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console

pack_staging_admin_client:
  image: docker
  stage: pack
  only:
    refs:
      - develop
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # Admin Client
    - docker build --build-arg BUILD_ARGS="-- --prod=false" -t admin-client frontends/admin-client
    - docker tag admin-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:edge
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:edge

pack_production_authorization_server:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Authorization Server
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t authorization-server apps/authorization-server
    - docker tag authorization-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:$VERSION
    - docker tag authorization-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-server:latest

pack_production_authorization_client:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Authorization Client
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t authorization-client frontends/authorization-client
    - docker tag authorization-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:$VERSION
    - docker tag authorization-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/authorization-client:latest

pack_production_communication_server:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Communication Server
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t communication-server apps/communication-server
    - docker tag communication-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:$VERSION
    - docker tag communication-server $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/communication-server:latest

pack_production_identity_provider:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Idenitiy Provider
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t identity-provider apps/identity-provider
    - docker tag identity-provider $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:$VERSION
    - docker tag identity-provider $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-provider:latest

pack_production_identity_client:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Identity Client
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t identity-client frontends/identity-client
    - docker tag identity-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:$VERSION
    - docker tag identity-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/identity-client:latest

pack_production_infrastructure_console:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Infrastructure Console
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t infrastructure-console apps/infrastructure-console
    - docker tag infrastructure-console $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console:$VERSION
    - docker tag infrastructure-console $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/infrastructure-console:latest

pack_production_admin_client:
  image: docker
  stage: pack
  only:
    refs:
      - master
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    # get latest tag for app in master branch
    # Admin Client
    - export VERSION=$(git tag --list --sort=-version:refname | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
    - docker build -t admin-client frontends/admin-client
    - docker tag admin-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:$VERSION
    - docker tag admin-client $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:$VERSION
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/building-blocks/admin-client:latest

pages:
  image: node:latest
  stage: docs
  only:
    - master
  before_script:
    # Install Helm
    - curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    # Install nodejs global packages
    - npm install -g lerna docpress

    # Install nodejs dependencies
    - npm install
    - lerna clean -y
    - lerna bootstrap
  script:
    # Build docpress to public path
    - docpress b

    # Build TypeScript API docs
    - npm run docs

    # Build and package Helm Chart
    - helm package kubernetes/helm-chart --destination public
    - helm repo index public --url https://castlecraft.gitlab.io/building-blocks
  artifacts:
    paths:
      - public
